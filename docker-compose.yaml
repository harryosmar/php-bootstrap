version: '3.3'
services:
  # The Application
  app:
    build:
      context: ./
      dockerfile: docker/app.dockerfile
    working_dir: /var/www
    volumes:
    - ./:/var/www
  # consumer
#  consumer:
#    build:
#      context: ./
#      dockerfile: docker/consumer.dockerfile
#    working_dir: /var/www
#    volumes:
#    - ./:/var/www
#    depends_on:
#    - zk
#    - kafka
#  consumer2:
#    build:
#      context: ./
#      dockerfile: docker/consumer.dockerfile
#    working_dir: /var/www
#    volumes:
#    - ./:/var/www
#    depends_on:
#    - zk
#    - kafka
  # The Web Server
  web:
    build:
      context: ./
      dockerfile: docker/web.dockerfile
    working_dir: /var/www
    ports:
    - 8080:80
  zk:
    image: confluentinc/cp-zookeeper:5.2.1
    container_name: 'zk'
    environment:
    - 'ZOOKEEPER_CLIENT_PORT=32181'
    - 'ZOOKEEPER_TICK_TIME=2000'
    - 'ZOOKEEPER_SYNC_LIMIT=2'
  kafka:
    image: confluentinc/cp-kafka:5.2.1
    container_name: 'kafka'
    depends_on:
    - zk
    environment:
    - KAFKA_ZOOKEEPER_CONNECT=zk:32181
    - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
    - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,LISTENER_DOCKER_NETWORK://localhost:29092,LISTENER_OUTSIDE://kafka:29094
    - KAFKA_LISTENERS=PLAINTEXT://kafka:9092,LISTENER_DOCKER_NETWORK://localhost:29092,LISTENER_OUTSIDE://kafka:29094
    - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,LISTENER_DOCKER_NETWORK:PLAINTEXT,LISTENER_OUTSIDE:PLAINTEXT
    - KAFKA_INTER_BROKER_LISTENER_NAME=LISTENER_DOCKER_NETWORK
    - KAFKA_BROKER_ID=2
    - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    - KAFKA_CREATE_TOPICS="test:1:1"
    - KAFKA_ADVERTISED_HOST_NAME=kafka
    ports:
    - '9092:9092'
    - '29094:29094'
  schema-registry:
    image: confluentinc/cp-schema-registry:5.2.1
    container_name: 'schema-registry'
    depends_on:
    - zk
    - kafka
    environment:
    - SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL=zk:32181
    - SCHEMA_REGISTRY_HOST_NAME=localhost
    - SCHEMA_REGISTRY_LISTENERS=http://localhost:8081
    - SCHEMA_REGISTRY_DEBUG=true
    ports:
    - '8081:8081'
  kafka-connect:
    image: confluentinc/cp-kafka-connect:5.2.1
    container_name: 'kafka-connect'
    build:
      context: ./
      dockerfile: docker/kafka-connect.dockerfile
    depends_on:
    - zk
    - kafka
    environment:
    - CONNECT_BOOTSTRAP_SERVERS=kafka:9092
    - CONNECT_GROUP_ID="quickstart"
    - CONNECT_CONFIG_STORAGE_TOPIC="quickstart-config"
    - CONNECT_OFFSET_STORAGE_TOPIC="quickstart-offsets"
    - CONNECT_STATUS_STORAGE_TOPIC="quickstart-status"
    - CONNECT_KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter
    - CONNECT_VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter
    - CONNECT_INTERNAL_KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter
    - CONNECT_INTERNAL_VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter
    - CONNECT_REST_ADVERTISED_HOST_NAME="localhost"
    - CONNECT_PLUGIN_PATH=/usr/share/java
#  mssql:
#    image: 'microsoft/mssql-server-linux:2017-latest'
#    container_name: mssql
#    ports:
#    - '1433:1433'
#    environment:
#    - ACCEPT_EULA=Y
#    - 'SA_PASSWORD=EmergingSystems1'
#  control-center:
#    image: confluentinc/cp-enterprise-control-center:5.2.1
#    container_name: 'control-center'
#    depends_on:
#    - zk
#    - kafka
#    environment:
#    - CONTROL_CENTER_ZOOKEEPER_CONNECT=zk:32181
#    - CONTROL_CENTER_BOOTSTRAP_SERVERS=kafka:9092
#    - CONTROL_CENTER_REPLICATION_FACTOR=1
#    - CONTROL_CENTER_CONNECT_CLUSTER=http://localhost:28082
#    ulimits:
#      nofile:
#        soft: 16384
#        hard: 16384
#    ports:
#    - '28082:28082'